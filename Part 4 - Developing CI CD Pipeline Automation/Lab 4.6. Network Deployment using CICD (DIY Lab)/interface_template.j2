---
# tasks file for roles/create_interfaces
- name: Retrieve all Networks configs from overlays data structure
  ansible.builtin.set_fact:
    networks_config: "{{ overlays | json_query('*.networks') | list }}"
  loop: "{{ overlays.keys() }}"

- name: Create per DC interface config files from template
  ansible.builtin.template:
    src: "{{ role_path }}/templates/interface_config.j2"
    dest: "{{ role_path }}/files/{{ fabric_name }}_interface_config.yaml"
    mode: "0644"
    force: true
  loop: "{{ overlays.keys() }}"
  loop_control:
    loop_var: fabric_name
    index_var: fabric_index
    label: "Creating {{ fabric_name }}_interface_config.yaml file"

- name: Create per DC config variables from files
  ansible.builtin.set_fact:
    "{{ fabric_name }}_interface_config": "{{ lookup('file', '{{ role_path }}/files/{{ fabric_name }}_interface_config.yaml') | from_yaml }}"
  loop: "{{ overlays.keys() }}"
  loop_control:
    loop_var: fabric_name
    label: "Creating {{ fabric_name }}_interface_config variable"

- name: Display overlay config
  ansible.builtin.debug:
    var: "{{ fabric_name }}_interface_config"
  loop: "{{ overlays.keys() }}"
  loop_control:
    loop_var: fabric_name
    label: "Displaying {{ fabric_name }}_interface_config variable"

- name: Set eth interface
  cisco.dcnm.dcnm_interface:
    state: overridden
    fabric: "{{ fabric_name }}"
    config:
      "{{ lookup('vars', '{{ fabric_name }}' + '_interface_config') }}"
  loop: "{{ overlays.keys() }}"
  loop_control:
    loop_var: fabric_name
    label: "Setting Ethernet interfaces in {{ fabric_name }} fabric"

