# Here a .gitlab-ci.yml file from the main branch is included
# It provides build_image and push_image jobs in the build stage
include:
  - project: $CI_PROJECT_PATH
    ref: main
    file: .gitlab-ci.yml

# Stages list
stages:
  - build
  - check

# The syntax_check job in the check stage is used to verify the YAML syntax
syntax_check:
  stage: check
  # The Docker image is required, the tag selects the docker runner
  # and the Docker image name is also provided
  needs:
    - push_image
  tags:
    - docker
  image: $IMAGE_NAME_NDFC_ANSIBLE:$IMAGE_TAG_NDFC_ANSIBLE
  # Before main script starts, a Python virtual environment initialization is performed
  before_script:
    - echo $CI_PIPELINE_SOURCE
    - echo $CI_COMMIT_BRANCH
    - cd Ansible_NDFC_CICD
    - pwd
    - source /root/ansible/bin/activate
  # The main script here just invokes the playbook with syntax-check option
  script:
    - ansible-playbook -i ./inventory.yaml overlay_automation.yaml --syntax-check
  # The job should only start when the pipeline trigger is push
  # and the branch where commit was performed matches the regex (the name starts with 'feature')
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^feature.*/
